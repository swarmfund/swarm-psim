// Code generated by go-bindata.
// sources:
// airdrop.html
// airdrop_delaying.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _airdropHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x1c\x7f\x6f\xe3\xb6\xf5\xff\x7c\x0a\x9e\x8a\xb6\x1b\x50\x59\xb2\x73\x49\xef\x24\xd9\xd8\x2d\x57\xb4\x03\xee\xd6\x43\x93\xa1\x2b\x86\xfd\x41\x8b\xb4\xc5\x85\x22\x35\x92\xf2\x8f\x1e\xee\x03\xed\x6b\xec\x93\x0d\x24\x25\x47\xb2\xad\x44\xb6\xf2\xeb\x6e\x52\x80\xd8\x14\xc9\xf7\x9b\xef\x3d\x3e\x51\x8e\x5e\xbc\xfd\xf9\xe2\xea\xb7\x0f\x3f\x80\x44\xa5\x14\x7c\xf8\xdb\x9f\xdf\xfd\xe5\x02\x38\xae\xe7\xfd\x7a\x7a\xe1\x79\x6f\xaf\xde\x82\xbf\xff\x74\xf5\xfe\x1d\x18\x0e\x7c\x70\x25\x20\x93\x44\x11\xce\x20\xf5\xbc\x1f\xfe\xea\x9c\x80\xe2\x72\x12\xa5\xb2\xc0\xf3\x96\xcb\xe5\x60\x79\x3a\xe0\x62\xee\x5d\xfd\xe2\xad\x34\xcc\xa1\x06\x52\x7c\x75\x55\x05\xc2\x00\x29\xe4\x4c\x4e\x22\x83\x78\x95\x52\x26\xc7\x7b\xc0\x0c\x5f\xbf\x7e\x6d\x67\x3b\x80\x42\x36\x1f\x3b\x98\x39\x7a\x78\x70\xd3\x92\x6a\x4d\xf1\xd8\x99\xc2\xf8\x7a\x2e\x78\xce\x50\xf0\xd5\xec\x54\xff\xbd\x20\x69\xc6\x85\x82\x4c\x19\x44\x18\xa2\x89\x21\x39\x4a\xb1\x82\x40\x23\x73\xf1\xbf\x73\xb2\x18\x3b\x17\x9c\x29\xcc\x94\x7b\xb5\xce\xb0\x03\x62\xdb\x1a\x3b\x0a\xaf\x94\xa7\x91\x87\x20\x4e\xa0\x90\x58\x8d\x73\x35\x73\x5f\x39\x55\x38\x0c\xa6\x78\xec\x2c\x08\x5e\x6a\x64\x95\xd9\x4b\x82\x54\x32\x46\x78\x41\x62\xec\x9a\x46\x39\x4f\x11\x45\xf1\xe4\x72\x09\x45\x0a\xde\x10\x81\x04\xcf\xc0\x65\x1e\xc7\x58\xca\xc8\xb3\x9d\x76\xa0\x61\x6d\xf2\xa7\x14\x23\x02\x01\x67\x74\x0d\x64\x2c\x30\x66\xe0\xe3\x46\xf6\x46\x7e\x37\x4d\x7d\xa5\x84\xb9\x09\x26\xf3\x44\x05\x60\xe8\xfb\x5f\x87\xb5\xde\x8a\x9c\x40\x21\xa8\x4d\xff\xa7\x13\xfb\xdf\x7c\xec\x41\x0b\x19\x02\x7f\x48\xe1\xca\xb2\x13\x80\xb3\xd7\xe7\xd9\xea\x8f\x15\xf4\x0a\x4e\x29\x1e\x4c\x39\x5a\x03\x92\xce\xb7\xe8\x2a\x26\xc1\x5c\xf1\x3a\x49\x25\xb1\xba\xa7\x42\xcb\x3e\xa8\x31\x66\x0a\x8b\x3d\x0c\x17\xc0\x7d\x70\xa3\xf5\x3b\x40\x0d\xb4\xa6\x20\x61\x3b\xe0\x0a\x50\xaf\xcf\xbe\x3e\x08\x18\xcd\x53\x26\xb7\x40\x55\x39\xab\x00\xab\xb3\xef\xa6\xfc\x77\x77\xca\x57\xae\x24\xbf\x13\x36\x0f\xc0\x94\x0b\x84\x85\xbe\xb5\x35\x70\x89\xa7\xd7\x44\xb5\x1a\xdb\x66\x4c\x06\x11\x22\x6c\xee\x52\x3c\xd3\xa6\x72\x9e\xad\x1a\x69\x2c\x87\x8a\xc2\xac\xea\x63\xdb\x0a\xa7\x41\x4a\x75\x3a\xfc\xb6\x44\xdc\xa9\xeb\x64\x20\x53\x48\xa9\x7b\xbe\x85\x0f\x11\x99\x51\xb8\x0e\x00\x61\x94\x30\xec\x4e\x29\x8f\xaf\x1b\xb1\x96\xb6\xee\xdf\x69\x0e\x25\xbe\xe1\xe8\x3e\x10\xea\xa5\x7b\x07\xc6\x8d\x3c\x5b\xa0\xbe\x2f\x9c\x56\xaf\x29\x66\xf9\xfe\x65\x73\x18\x08\x85\xbe\xab\x35\x93\x66\x9f\xd1\x48\xfb\x5d\xd2\xbd\x9d\x84\xc1\x02\x0b\x45\x62\x48\xb7\x68\xa9\xdc\xdf\x26\xaa\x51\xa6\xb7\x63\xfa\x07\xa4\x64\xce\xc6\xd6\x85\xfd\xb3\x15\xa3\xdb\x9e\x39\xf2\x6c\x48\x38\x89\x3c\x1b\xcf\x22\xb3\xc0\x8a\x10\xb8\xed\x48\x2a\xeb\xde\x4d\xa5\xab\xc3\x99\xee\xc2\x2e\x44\xff\xca\xa5\x0a\x4c\x70\xd8\xe3\x54\xaa\xf3\x8a\xde\xfd\x73\xdf\x43\x31\x27\x2c\xf0\xc3\xdb\x82\x6f\xb8\x1f\x72\xcc\x29\x17\xc1\x57\x3e\xd4\x7f\xe1\x8c\x33\xe5\xce\x60\x4a\xe8\x3a\xf8\xf6\x92\xe7\x22\xc6\xe0\x12\x32\x09\x3e\x08\xfe\xed\x77\x12\x32\xe9\x4a\x2c\xc8\xcc\x0e\xd4\x84\x04\xda\x07\xd9\xe6\xd2\x7a\xd9\x97\xbe\x1f\x1a\x03\x28\xbc\xee\x70\x70\x1a\xa6\x25\x85\x37\x31\xc2\x50\x5e\xb8\x92\xc0\x0f\x0d\x67\x46\x33\x81\xf6\x3f\xe1\xcd\xa0\x7a\xfe\x20\x33\xc8\x40\x4c\xa1\x94\x63\x27\x13\x58\x8b\x1f\x8b\x32\x07\x2a\x14\x50\xf0\x64\x25\x10\x96\x66\xc2\x38\xc3\x15\x71\x54\x38\xc8\x56\x75\x82\xb3\x55\xa8\xa3\x6b\xd1\xf4\xc3\x9b\x50\xeb\x87\xa9\xe4\x6e\x42\x10\x0e\x20\xa5\x15\x68\x3c\x83\x31\x51\xeb\xc0\x0f\xf9\x02\x8b\x19\xe5\xcb\x20\x21\x08\x61\x16\x2e\x88\x24\x53\x42\x75\xa7\xbd\xe3\x4c\x22\x4f\x73\x31\x39\x89\x8c\x51\x96\xdc\x68\x13\xda\x24\x73\x05\x27\x6d\x35\x6b\xd4\x19\x73\x4a\x61\x26\x71\x50\x7e\x29\x3b\xa4\x26\xce\x48\xf9\x61\xb4\x5d\xca\x4d\x6b\xb4\x51\xf3\xcd\xaa\x2e\x57\x78\x71\x4f\xf1\xac\xa2\xfd\x4d\xb2\x26\x4a\x99\x1c\x02\xa8\x98\x6d\x21\xa0\x52\xd2\x76\xe9\x3b\xc0\x3a\x82\x4d\x73\x51\xb4\xf5\xbc\x9a\x53\xa8\xae\xeb\x64\x9d\x25\x98\xc9\xc0\xa4\x4f\xe5\xb2\xac\xdd\xbc\xd1\x59\x83\x5a\x2a\x9a\x7b\x20\x7d\x54\xc9\xb9\x27\x85\x70\x81\xdc\xa5\x80\x59\x30\x15\x18\x5e\xbb\xba\x5d\x11\xae\x11\x70\x91\x14\x22\xa8\xa0\x9b\xe9\x3c\x1d\x8d\x9d\xcd\xbe\xe0\x66\xe1\x9f\xbd\xf2\xb3\xd5\xae\x86\x6b\xa0\xec\xc2\xd8\xd2\x4f\xa9\xbd\x4d\xbe\x38\xa3\x1c\x2a\xb7\xe8\xde\x01\xb2\x7f\x25\xd9\xbc\xb7\xb6\x9c\xb0\xfe\x3b\x60\x11\x19\xb4\xc6\x9d\x6c\x84\x69\xa1\xee\x95\xa8\x25\xaf\xd9\xc8\x8d\x38\xf6\xc8\xc0\xca\x41\x3b\x85\xa6\xbe\xae\x2b\x62\x17\x22\xea\x4d\xbd\x95\xa9\x37\xd8\x6b\x61\xa0\x82\x2f\x41\x3d\x2e\xdd\x7a\xed\xdb\x38\x1f\x6a\x92\x65\x8c\x33\x74\x54\xd8\xcd\xb8\xdd\xe8\x07\x02\x53\xa8\xc8\x02\x1f\xe5\x7c\x6f\x67\xbd\xd9\x44\xeb\xe3\xee\xdb\x5c\xeb\xd0\x93\x52\xfa\xe5\x5e\x83\x42\x31\xc7\xee\x39\x28\x73\xf3\x19\x11\x52\x01\x0a\xa5\x6a\xa5\x95\xaa\x6a\xea\xbe\xe3\x71\x33\xa6\x6d\xcf\x52\x6e\xbe\xa6\x5c\x29\x9e\x56\x6e\x98\x5d\x9b\x01\x5d\xdf\x9f\x99\x5b\xfb\xb3\xab\xd1\xf7\x2f\x1b\x5d\xcf\x7e\x29\x1b\x33\x2f\x0d\xb6\xb5\x75\x76\x0b\xfd\xed\xa9\x7b\x48\x0b\xab\x63\x4a\x76\x12\xb4\x47\xce\xa3\x1b\x39\x3c\x82\x1d\xb0\xe3\xc1\xb4\xea\x5a\x7a\xaf\xa6\xeb\x99\x1a\x49\x9d\xe7\x76\xae\xab\x79\xfe\x63\x19\x5c\x1d\x2b\x2a\xea\x59\x63\x67\xa8\x53\x87\x4e\xd0\xc0\x33\x4f\x6f\xfd\x83\x62\xbe\x6f\x76\x6e\xe5\x56\x53\x72\xb7\xd2\xeb\x8a\x9c\xe2\x00\xaf\x60\xac\xe8\xfa\xc1\x33\x82\x36\xd7\x37\x5f\xad\xde\xf8\x61\x37\x63\xf0\x14\xea\x60\xc0\x9e\x12\x9d\x66\x1f\xbf\x7e\x22\xcf\x38\x9c\x23\x27\x93\x74\xbe\x59\x03\x67\xdd\xd6\x80\x14\xf1\xe6\x89\x87\x54\x70\x4e\xd8\x7c\x00\x33\x32\x90\x39\x1b\xc8\x25\x14\xe9\x60\x96\x33\xe4\x51\x3e\xe7\x9e\x6d\x67\x6c\xde\x05\x5f\xb9\xd8\xa4\x4b\xf4\xc6\x20\xe3\x3a\x31\xe3\xcc\x4d\x39\xc2\xc1\x94\xc4\xf9\x94\xc4\x61\x4c\x31\x14\xc1\x94\xab\x64\x93\xda\x99\x22\x57\xa5\x14\x61\x76\xdb\x3c\x57\xda\xc4\x4b\x33\x46\x38\xe6\xc2\x80\xb3\xdb\x13\x3b\x52\xaf\x93\x3e\x2c\x1c\xc0\xf3\xe7\x1e\x16\x4e\xbf\xf4\xb0\x70\x7a\x50\x58\x38\xed\xc3\xc2\xa1\xb3\x3f\xbb\xb0\x10\x79\x2a\x39\x70\xbb\x70\x10\x97\x07\x11\xd6\x8e\x98\x76\x04\xb4\x12\x67\x2b\xea\x76\x8a\x14\x07\x55\x27\xfa\x52\xc4\xb1\xa5\x88\xe1\xa8\xa8\x45\x0c\x47\x5f\x78\x31\xa2\x56\x7d\x38\xa2\x1e\x71\x76\xde\xd7\x23\xfa\x7a\x44\xc1\x52\x9f\x78\x1e\x3e\xff\xa9\x13\x4f\x6d\x33\x5f\x74\xe2\x79\xe0\x33\x88\xf3\x3e\xf1\x3c\x70\xf6\x67\x97\x78\x9a\xc9\xc9\x68\xc7\xff\xda\x2f\x9b\xc8\xa8\xb7\x20\x85\xf5\x9d\xce\x5e\x8e\x5e\xbe\xac\x59\xdf\x2f\x90\xe2\x25\x5c\xb7\xdc\xec\x9c\xde\x7a\xc0\x62\x17\xef\x2d\x87\x2c\x36\x86\xc4\xb8\x48\x21\xed\x60\x44\x3f\x61\x4a\xf9\x8b\xc8\x4b\x46\xbd\xc3\x6f\xcf\x73\xef\xf0\x41\xef\xf0\x7b\x87\x7f\xf4\xec\xa7\x72\xf8\x59\x37\x7f\xff\x30\x47\xeb\x0e\xf0\xfc\x1d\x8c\xe7\x37\x9e\x0b\x00\x8b\xe3\xf2\x99\xe0\x31\x96\x12\xa3\x81\xbe\x0f\x12\xb8\xc0\x60\x8a\x31\x03\x02\x2f\xa1\x40\x18\x81\xa1\xef\x83\xcb\x5f\xdf\x03\xc5\xaf\x31\x93\x80\xb0\xa3\x11\xaf\x35\xe2\x25\xa4\x14\xab\x41\xe4\x65\x7d\x98\x69\xcf\x73\x1f\x66\x40\x1f\x66\xfa\x30\x73\xf4\xec\xa7\x0a\x33\xf5\xf3\xc1\xb9\x52\x9c\x81\x14\x23\x92\xa7\x40\x40\x44\x72\x79\x1f\xae\x6b\x53\x50\xf4\xed\xfb\x24\xcd\x16\xbf\xeb\xcc\xd2\x9d\xb9\x47\xb8\xb7\x0e\xcf\x27\xc1\x93\xba\xa7\x2f\xc7\xa1\x3c\xe6\x61\xc9\x76\xd2\x7d\xce\x95\xdd\x66\xaa\x9f\xc2\x12\xeb\x14\x1c\x6f\x95\xd5\xf3\xa7\xb3\x29\x1c\x7d\x5f\x88\xd7\x1e\x25\x68\x61\xb4\xc5\x10\xeb\x99\x6e\x4a\xd0\xc5\x61\xd6\xff\x3f\x23\xae\x29\x06\x82\x44\xe0\xd9\xd8\xf9\xf8\x71\xf0\x8e\xb0\xeb\x4f\x9f\xba\xe7\x33\x5b\xd7\xce\x2b\x23\x56\x7b\x3e\x90\x9c\x12\x04\xea\x4a\x6d\xd2\x52\xf9\xf4\xae\xfa\x0e\xd7\xbd\xa8\x8e\xea\xff\x58\xdc\xad\xb1\x57\xd9\xca\xc6\x92\xf2\xcb\x8e\x06\xf7\x1d\x75\x71\x26\x3f\xf2\xfb\x16\x28\x50\x1c\xd8\xb7\x83\x23\x0f\x4e\xba\xa5\x20\xd5\xab\x5b\x3a\x52\x81\x72\x7c\x66\x51\x01\xf2\x24\x79\x55\xc7\x72\xeb\x11\x58\x0f\x3f\x20\x00\xea\x0f\x73\xf1\x2a\x83\xac\xed\x99\xfe\x9d\xeb\xb9\x3c\x9e\xab\xb8\xeb\x1d\xc7\xb8\xfd\xa2\x5a\x11\x20\x7d\x67\xd2\x9f\xae\xe8\x4f\x57\xf4\xa7\x2b\xfa\xd3\x15\xcf\x28\x07\xef\x4f\x57\x74\x39\x5d\x91\x95\x8b\x88\x71\x45\x62\x7c\x74\x2e\xfa\x28\x55\xf0\xd1\x33\xac\x82\x7f\xa0\x18\x4a\x0c\x10\x07\x8c\x2b\x20\x70\x46\xd7\x3a\x5d\x54\x09\x91\x00\xa7\x90\xd0\x0e\x25\xea\x5e\x39\x1d\x95\x73\xc1\xb3\xb5\x71\x87\xe0\xbf\xff\x01\x23\x7f\xf8\xca\xa6\xf1\x03\xf0\x86\x52\x60\x3a\x24\x10\x58\x62\xb1\xc0\xc8\xe8\xa9\x4f\x0e\xfb\xe4\x70\xef\xa8\x7b\x48\x0e\x9b\xb7\x58\xcd\x54\x34\x62\xde\x8b\x2d\xf2\xec\x3b\xe6\x95\xdf\x3a\xd8\xe0\xb4\x38\xca\x69\xd1\x0b\xd7\x05\x99\xc0\x0b\xcc\x14\xf8\x51\xbb\x29\xc0\x19\x20\x3f\x5f\x02\x6d\x2c\x40\xdb\x0e\x48\x21\x23\x59\x6e\x5f\x4a\x01\xae\x3b\x39\x89\x10\x59\x94\x26\x5a\xfd\x2d\x8d\x70\x99\x10\x85\x4d\xe0\xc7\x01\xe3\x4b\x01\x33\x63\x73\xc1\xf0\x2c\x5b\x81\x98\xe7\x82\x6c\xed\xf7\x7d\x67\xf2\x0d\x9b\xca\x2c\x04\x77\x7f\x18\xea\x5b\x8f\xbe\x9f\x8f\x2e\x38\x4f\x22\x0f\x91\x85\x16\xb5\xd5\x5c\x64\x7e\xb1\x6c\xf2\xbf\x00\x00\x00\xff\xff\xa1\x0d\x6b\x1c\xdb\x4d\x00\x00")

func airdropHtmlBytes() ([]byte, error) {
	return bindataRead(
		_airdropHtml,
		"airdrop.html",
	)
}

func airdropHtml() (*asset, error) {
	bytes, err := airdropHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "airdrop.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _airdrop_delayingHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xeb\xae\xdb\xb8\x11\xfe\x7f\x9e\x62\x56\xc1\xee\xb6\x40\x64\xe9\x5c\x37\x91\x65\xa3\x69\xb2\xd8\x16\x48\x9a\x60\x73\x16\xdb\x45\xd1\x1f\xb4\x38\xb6\xd8\x43\x91\x2a\x49\xf9\xb2\x41\x80\xbe\x46\x1f\xa1\xaf\xd1\x47\xe9\x93\x14\xd4\xc5\x96\x6d\xc9\xf2\xb9\x38\x3d\x49\xed\x83\xc4\x16\x2f\x43\xce\x7c\x33\xc3\x19\x92\x0a\xbf\x7a\xf5\xf6\xe5\xf5\x2f\xef\xbe\x87\xd8\x24\x1c\xde\xfd\xf4\xfb\xd7\x7f\x7c\x09\x8e\xeb\x79\x3f\x9f\xbf\xf4\xbc\x57\xd7\xaf\xe0\xcf\x7f\xb8\x7e\xf3\x1a\x4e\x7b\x3e\x5c\x2b\x22\x34\x33\x4c\x0a\xc2\x3d\xef\xfb\x3f\x39\x27\x00\x00\x4e\x6c\x4c\x1a\x78\xde\x6c\x36\xeb\xcd\xce\x7b\x52\x4d\xbc\xeb\x1f\xbd\xb9\xa5\x77\x6a\x09\x94\x3f\x5d\x53\xeb\xdd\xa3\x86\x3a\xc3\x93\x30\x1f\x74\x9e\x70\xa1\x07\x0d\x64\x4e\x9f\x3f\x7f\x5e\xf4\x76\x80\x13\x31\x19\x38\x28\x1c\xdb\x3c\x58\x3d\x69\xb3\xe0\x38\x70\x46\x24\xba\x99\x28\x99\x09\x1a\x3c\x19\x9f\xdb\xbf\xaf\x58\x92\x4a\x65\x88\x30\xf9\x40\x48\xe8\xf0\x04\x20\x4c\xd0\x10\xb0\x43\xb9\xf8\xf7\x8c\x4d\x07\xce\x4b\x29\x0c\x0a\xe3\x5e\x2f\x52\x74\x20\x2a\x9e\x06\x8e\xc1\xb9\xf1\xec\xd0\x7d\x88\x62\xa2\x34\x9a\x41\x66\xc6\xee\x33\x67\x45\x45\x90\x04\x07\xce\x94\xe1\xcc\x0e\x54\xeb\x3b\x63\xd4\xc4\x03\x8a\x53\x16\xa1\x9b\x3f\x14\xbd\x0c\x33\x1c\x87\xef\x67\x44\x25\xf0\x82\x29\xaa\x64\x0a\xaf\x90\x93\x05\x13\x93\xd0\x2b\x6a\x6d\xbb\x9c\xa7\xe1\xef\x12\xa4\x8c\x80\x14\x7c\x01\x3a\x52\x88\x02\x3e\xe4\x02\xcf\x85\x56\xfc\x04\x48\x98\x70\x63\x64\x93\xd8\x04\x70\xea\xfb\x5f\xf7\xcb\xf2\x9a\x40\xa0\x94\x48\x5e\xf3\xf1\xc4\xfe\x3b\x01\x68\x20\x4f\x04\x85\xdf\x24\x64\x5e\xcc\x39\x80\xcb\xe7\x57\xe9\xfc\xb7\xe5\x50\x86\x8c\x38\xf6\x46\x92\x2e\x80\x25\x93\xe5\xf8\x65\x53\x92\x19\x59\x0d\x5d\x4d\xc7\x96\x95\x63\x6e\x52\x88\x50\x18\x54\x6b\x4c\x94\x84\x7c\x58\x01\xd7\xd2\xb9\x67\x05\x4d\x98\xa8\x11\x28\x3b\x3f\xbf\xfc\x7a\xaf\xee\x3c\x4b\x84\x5e\x76\xae\xcf\xb7\xd6\xbd\x62\xc7\x4d\xe4\xaf\xee\x48\xce\x5d\xcd\x7e\x65\x62\x12\xc0\x48\x2a\x8a\xca\x16\x2d\x9b\xcc\x70\x74\xc3\x4c\x47\xab\xdd\xb5\x29\xa1\x94\x89\x89\xcb\x71\x6c\xa1\xbc\x4a\xe7\x0d\x73\xa9\x1a\xa9\x12\xf0\xf5\x56\x5d\x0c\x6f\x71\xbe\x3e\xa6\xdf\x3d\x60\x2b\x3a\x71\x4f\x27\x84\x73\xf7\x6a\x49\x9b\x32\x9d\x72\xb2\x08\x80\x09\xce\x04\xba\x23\x2e\xa3\x9b\x86\x11\x2a\x5d\xf3\x5b\xa1\xab\x68\x9f\x9e\xdd\x95\xb8\x35\x8c\x16\xea\x4b\x99\xec\x1c\xe6\xee\xf4\x0b\x1c\x12\x14\xd9\xa6\xb2\xee\xd7\xc9\xd0\xa7\x6b\x8f\x71\x93\xe5\x35\xcc\xac\x4b\x42\xcd\xc3\xf5\xa6\xa8\x0c\x8b\x08\xdf\x18\xb7\x56\x1e\x77\x4b\xa7\x99\xf6\x5f\x08\x67\x13\x31\x28\x4c\xff\xaf\x1d\x6c\xac\x7c\x55\xe8\x15\xee\xf0\x24\xf4\x0a\x27\x1e\x5a\xa5\xce\xeb\x4b\xdf\xbf\x69\xa0\x35\xdb\x72\x13\xed\x5a\x4f\x6e\xab\xd0\x25\xf4\x6f\x99\x36\x41\xee\x26\x1b\x4c\xb6\xde\xaf\xac\x6d\xee\xfb\x86\xa8\x09\x13\x81\xdf\xdf\xb5\xea\xf4\x9b\x29\x47\x92\x4b\x15\x3c\xf1\x89\xfd\xeb\x8f\xa5\x30\xee\x98\x24\x8c\x2f\x82\x6f\xdf\xcb\x4c\x45\x08\xef\x89\xd0\xf0\x4e\xc9\x6f\x9f\x6a\x22\xb4\xab\x51\xb1\x71\xd1\xd0\x4e\x24\xb0\x36\x5f\x3c\xce\x0a\xbf\x75\xe1\xfb\xfd\x1c\xe2\xd2\x8f\x9d\xf6\xce\xfb\x49\x35\xc3\x95\x67\xcd\x67\x5e\x9a\x73\xe0\xf7\x73\xce\x72\x44\x02\x6b\xfd\xfd\x55\xa3\xf5\x85\x53\xa7\x44\x40\xc4\x89\xd6\x03\x27\x55\x68\x21\x40\xe5\x94\xd8\x95\x00\x94\x3c\x15\x12\xe8\x57\x6a\x21\xa4\xc0\x9a\x38\x6a\x1c\xa4\xf3\xf5\x09\xa7\xf3\xbe\x5d\x75\xca\x47\xbf\xbf\x5a\x82\xfc\x7e\xa2\xa5\x1b\x33\x8a\x01\xe1\xbc\x46\x4d\xa6\x24\x62\x66\x11\xf8\x7d\x39\x45\x35\xe6\x72\x16\xc4\x8c\x52\x14\xfd\x29\xd3\x6c\xc4\xb8\xad\x2c\x4a\x9c\x61\xe8\x59\x2e\x86\x27\x61\xae\x8c\x15\x37\x56\x8d\x2a\x46\x2a\x4e\xf6\x45\x36\x87\x33\x92\x9c\x93\x54\x63\x50\xfd\xa8\x2a\xb4\x9d\x5c\x2e\xe5\xc3\xa0\x5d\xc9\xcd\x22\xda\x8a\x7c\x3b\xd4\x95\x2d\x97\x65\x46\xa6\x35\xf4\xcb\x48\x45\x55\x12\xb9\x0d\x99\xbc\xaf\xed\x4d\x2b\x19\x17\xc6\xee\x40\x61\xfa\xcb\xc7\x69\xf9\x6c\xfb\x54\x08\xac\x59\x73\xbc\x48\x63\x14\x3a\xc8\xc3\x8a\xca\x18\xd7\x0a\x57\x48\xb5\x80\x51\xc3\xeb\x40\x28\xd4\xa7\xf3\x40\x30\x48\x45\xdd\x99\x22\x69\x30\x52\x48\x6e\x5c\xfb\x5c\x0a\x15\x20\x2c\x83\x26\x4a\x0c\x71\x53\x1b\x92\xd2\x81\xb3\x0c\x80\x57\x86\x7e\xf9\xcc\x4f\xe7\x9b\x88\x96\x24\x0a\x03\xd8\x40\xa3\xc2\x6a\x19\x55\x8d\xb9\x24\xc6\x2d\xab\x97\x9d\x9b\x2d\xa5\x88\xfc\xd6\xcc\x05\xed\xdf\x2d\x8c\x24\x1f\x2e\x77\x17\x4b\xb1\x15\x54\x1b\x65\x57\x4c\xab\x5d\x89\x73\xf6\x6b\x3c\x5b\xae\xad\xa9\xaf\x97\xdc\x47\xbf\x57\x54\xe8\x51\x69\x3b\x94\x76\x43\xf3\x4a\x55\x53\x72\x06\xeb\x2b\x49\xb3\x92\xdd\x4b\xad\xaa\x75\x28\x1f\xb9\xc6\x52\x2a\x8b\x2c\x34\x50\xc8\x89\x61\x53\xbc\x83\x83\xdc\x64\x6e\x53\xc1\x1e\x52\xcd\x2a\x5a\x71\x25\xbd\x2a\xd2\xe6\x44\x4d\xd0\xbd\x82\x2a\x82\x1d\x33\xa5\x0d\x70\xa2\x4d\x8b\x54\x9b\x6d\xf7\xd3\x46\x24\x9b\x96\x5d\x25\x18\x23\x69\x8c\x4c\x6a\x05\x79\x4e\x92\x93\x5e\xcf\x41\xf2\xa2\xe6\xe8\xe5\xec\xbb\x8b\x0d\xd3\xdf\x54\xc0\x16\xb9\xac\x14\x6e\x6f\xed\xba\xcf\xf2\xda\x3c\xbf\x87\xd3\x95\x95\xc6\x6c\x86\x35\x9f\x38\xfa\x6c\xe5\x64\xc7\xb4\x37\x7d\x85\x15\x79\xab\x9f\x78\x54\x10\x56\xb3\x6f\x76\x06\x87\x05\xbb\xa2\x4b\xcb\xdd\x8c\x81\x73\x6a\x97\xc1\x6e\xa9\x3d\xea\x15\xcc\xbf\xd5\x0a\xe6\xe7\x79\x44\x95\xf8\x68\xe9\xd6\x6a\x5d\x95\x71\x0c\x70\x4e\x22\xc3\x17\x07\x58\xdf\xb6\x3f\xdf\x3c\x99\xbf\xf0\xfb\x5d\x80\x79\x86\x76\xa8\x8a\x67\x54\x67\x8b\x2e\x8d\x0b\xbd\xdc\xa4\x76\x36\x61\xc9\x64\xa9\x3b\x97\x56\x77\x40\xab\x68\xb9\x2b\xab\x0d\x99\x30\x31\xe9\x91\x94\xf5\x74\x26\x7a\x7a\x46\x54\xd2\x1b\x67\x82\x7a\x5c\x4e\xa4\x57\x3c\xa7\x62\xd2\xa9\x72\x4b\x7d\xd3\x2e\xb3\x91\x5c\x2a\xed\x2a\x2c\x85\x9b\x48\x8a\xc1\x88\x45\xd9\x88\x45\xfd\x88\x23\x51\xc1\x48\x9a\x78\xb9\x8e\xe7\xbb\x0c\xb5\xdc\x30\x4f\x7f\x64\x66\x2c\xca\x15\x92\x14\x23\xa9\x72\x72\x45\x3c\x59\xb4\xb4\xaa\x72\xf4\x38\x07\xf7\x38\xe7\x9f\xbf\xc7\x39\xbf\x95\xc7\x39\x3f\x7a\x9c\x1d\x4d\x76\x7b\x9c\xd0\x33\x71\x6b\x2c\xd4\x3a\x83\x1d\x64\x9b\x09\x36\x93\x6a\x61\xa0\x85\xfa\x56\xee\xd2\x91\xb4\x1c\x33\x94\xe5\x46\x7a\x91\xa2\x9c\x9e\x7d\x51\x39\xca\x5a\x52\x72\x87\x34\xe5\xf2\xea\x98\xa6\xac\xab\xcd\x31\x4d\xf9\xbf\x0d\x1a\x2c\x52\x9f\x79\xd0\x70\xcb\x8d\xb6\xab\x63\xd0\xd0\xde\xa4\x33\x4d\x89\xcf\xb6\xbc\x45\xf1\x63\xe9\x9d\x6d\x50\x56\x62\x7a\x3e\xbe\x38\xbb\xb8\x58\xc3\xf4\x47\xc2\x71\x46\x16\x7b\x86\x7f\xe7\x3b\xcf\xd6\xb6\xc7\xdd\x71\xbe\xb6\x84\x47\x48\x95\x10\xde\x01\xcd\xdb\x4c\x01\x49\x25\x97\x13\x86\xba\x17\x7a\xf1\xd9\xd1\x15\x1d\x5d\xd1\xd1\x15\x3d\x26\x57\x94\xde\xcf\x13\x1d\xe6\xbc\xff\x16\x3e\xa9\x03\x92\x9f\xc4\x58\x2a\x93\x09\x62\x90\x2f\x9e\x82\x89\x11\x48\x79\x69\x2d\x55\x32\x42\xad\x81\x69\xa0\xc8\xc9\x02\x69\x7e\x77\x6c\xc6\x38\x07\x43\x6e\x10\x12\xa9\x10\x4c\x4c\x04\x9c\x5d\x40\x2c\x33\xa5\x7b\xf0\x33\xfe\xe7\x1f\xff\x54\x08\x54\x32\x31\xd9\x39\xb2\xcc\x14\x8c\x50\x1b\x30\xd2\xd2\x67\x53\x54\xb0\xb0\x85\x46\xde\xa0\xd0\x30\x5a\xc0\xfb\x4c\x50\xb2\x80\x0b\x78\x43\x54\x14\xf7\xe0\x97\x5a\x75\x3e\x8d\x11\x02\x4b\xf2\x2b\x6e\x76\xfa\x40\xa6\x84\xf1\x9d\xa1\xb5\xfd\x8c\xa5\x82\x19\x33\x31\x55\x64\x46\x38\x10\x0d\x5a\x4a\x61\xbf\x17\x32\x03\x85\x11\xb2\xa9\xe5\x0b\x93\x5e\xe8\xa5\x47\x8f\x7c\xf4\xc8\x47\x8f\xfc\x98\x3c\xf2\xfa\xfd\x9e\xcc\x18\x29\xc0\xfa\x80\x2c\x01\x45\x28\xcb\xf4\xfe\x26\xb8\xdc\x7f\xf0\x8b\x5b\x96\xed\xda\xb2\x6d\x94\xc9\x56\xdf\x3b\x98\x69\xe7\xa6\xf5\x61\x4d\xf0\xcb\x31\xa9\xc3\x5e\x6c\x68\xd3\xc2\x3d\xbc\xd6\xa3\x71\xf7\x87\xd5\xa6\xfb\xeb\x54\xfd\x16\xc8\x78\x44\xce\xbe\x2b\x05\x53\x9c\xf1\xec\xa1\x72\x65\x93\xc2\x07\xac\xf6\x97\xca\x2b\x25\x5f\x9e\x0a\x96\x22\x27\x10\x2b\x1c\x0f\x9c\x0f\x1f\x7a\xaf\x99\xb8\xf9\xf8\x71\x9f\xb5\xb4\xfc\x6c\x5d\x88\x2c\x24\xee\x83\x96\x9c\x51\x58\x07\xa2\x4d\xb2\xd5\x06\x77\xfd\x0e\xf2\x83\x88\x9b\xdb\xff\x51\x75\x4b\xf9\x59\x3a\x2f\x7c\x70\xf5\x63\x4b\xea\x4d\xe7\x86\xce\xf0\x07\xb9\xb7\xa8\x8c\x84\xe2\x95\x8e\xd0\x23\xc3\xee\xc5\xb0\xc4\xa6\x73\x49\x84\xfd\xd6\x3c\x78\x90\x15\x78\xaf\x9d\x97\x1d\x14\x76\x9d\xe6\xac\x9d\x0c\xe0\x3c\x25\xa2\xfd\xde\x57\xf9\x79\x2c\xfb\xc1\x35\x17\xb2\x65\xac\x9b\xd7\x8c\x4b\x77\xeb\x3b\xc3\xe3\xd1\xd6\xf1\x68\x6b\x97\x14\x8f\x47\x5b\x0f\xa2\x62\xc7\xa3\xad\xc3\x1d\x6d\xa5\x95\xba\x0b\x69\x58\x84\x1d\x71\xc3\x27\xd9\x06\x3b\xfb\x1f\x6d\x83\xbd\xe3\x48\x34\x02\x95\x20\xa4\x01\x85\x29\x5f\xd8\x25\xdf\xc4\x4c\x03\x26\x84\xf1\xce\xad\xa0\xa3\x30\x97\x9f\x97\x32\x5d\xe4\x4e\x04\xfe\xfd\x2f\x38\xf3\x4f\x9f\x15\xa1\x53\x0f\x5e\x70\x0e\x79\x85\x06\x85\x1a\xd5\x14\x69\x2e\xd7\x63\x60\xf1\x39\x06\x16\x9b\x01\xe9\x26\xc5\x2d\x5a\x1b\x54\x42\xaf\x78\xcb\xa3\x7c\x9f\xa8\xa4\x56\x50\xa9\x9a\x86\x5f\xb9\x2e\xa4\x0a\xa7\x28\x0c\xfc\x60\x0d\x11\xa4\x00\xf6\xf6\x3d\x58\x38\xc0\xa2\x03\x09\x11\x2c\xcd\x8a\xfb\x85\xe0\xba\xc3\x93\x90\xb2\x69\xa5\x04\xf5\xf7\xd4\xfa\xb3\x98\x19\xcc\x17\x17\x0c\x84\xb4\x19\x57\x8e\x6a\x70\x7a\x99\xce\x21\x92\x99\x62\x1b\xd9\x86\xef\x0c\xbf\x11\x23\x9d\xf6\xa1\xfb\xeb\x04\xf6\x68\x74\x88\xaf\x3b\x0c\x7c\x12\x7a\x94\x4d\xad\x98\x0b\x84\xc2\xfc\x25\xf8\xe1\x7f\x03\x00\x00\xff\xff\x51\x7e\xb3\xce\x28\x40\x00\x00")

func airdrop_delayingHtmlBytes() ([]byte, error) {
	return bindataRead(
		_airdrop_delayingHtml,
		"airdrop_delaying.html",
	)
}

func airdrop_delayingHtml() (*asset, error) {
	bytes, err := airdrop_delayingHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "airdrop_delaying.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"airdrop.html":          airdropHtml,
	"airdrop_delaying.html": airdrop_delayingHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"airdrop.html":          &bintree{airdropHtml, map[string]*bintree{}},
	"airdrop_delaying.html": &bintree{airdrop_delayingHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
