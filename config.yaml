# common

log:
  level: warn
  env: not-provided # set dev/stage/prod here
  project: not-provided

  #slack_webhook: "https://hooks.slack.com/services/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"
  #slack_channel: "#reports"
  #slack_level: error
  #formatter: json
  #sentry_dsn: http://...

horizon:
  #addr: http://swarm:8000
  addr: http://localhost:8000

mixpanel:
  api_url: "https://api.mixpanel.com"
  token: "xxxxxxxxxxxxxxxxxxxxxxxxx"

salesforce:
  api_url: "https://xxxxxxxx.salesforce.com/"
  client_secret: "123456789123"
  client_id: "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
  username: "user@test.com"
  password: "password"

notificator:
  url: http://swarm:9009
  secret: string
  public: string

bitcoin:
  node:
    host: swarm
    port: 8332
    user: user
    password: password
  testnet: true
  request_timeout_s: 30

ethereum:
  proto: http
  host: swarm
  port: 8545

discovery:
  env: local
  host: localhost
  port: 8500

notifications_slack:
  url: https://hooks.slack.com/services/....
  channel_name: "#channel_name"
  icon_emoji: ":mega:"

s3:
  url: http://127.0.0.1:9000
  access_key: 79JUU8NN3K8BPQBD0P2W
  secret_key: N8sE8S5/0XRFVeqIJj2f7UWZYqqo6AClG5BRHCP/
  region: us-west-2
  disable_ssl: true
  s3_force_path_style: true

# services

services:
  - balance_reporter
  - event_submitter
#  - bearer
#  - notifier
#  - charger

#  - btc_deposit
#  - btc_deposit_verify
#  - eth_supervisor
#  - eth_contracts_deploy

#  - btc_funnel
#  - eth_funnel
#  - eth_contract_funnel

#  - btc_withdraw
#  - btc_withdraw_verify
#  - eth_withdraw

#  - taxman
#  - price_setter
#  - price_setter_verify

#  - airdrop_earlybird
#  - airdrop_kyc
#  - airdrop_march_referrals
#  - airdrop_march_20_20
#  - airdrop_telegram

#  - identity_mind
#  - invest_ready

#  - template_provider
#  - wallet_cleaner
#  - market_maker

balance_reporter:
  signer: SX
  asset_code: "USD"

event_submitter:
  signer: SXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  txhistory_cursor: ""

bearer:
  host: localhost
  port: 2323
  source: GDHK26UFBGC63UBQCVQLHJD6RAQXLAS7RKJAR5FZQAWMCUBFHRNKFSKC
  signer: SDLZEHWFLOP2BIQBCQIGI7J7BXBAN5S7UESAKYT7XIZC62RG4YLM4FZ7
  normal_time: 1m
  abnormal_period: 1m
  max_abnormal_period: 5m

notifier:
  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

  order_cancelled:
    cursor: 1

    emails:
      subject: "IO cancelled"

      request_type: 10 # 10 means that email will be sent only once per each unique token
      request_token_suffix: _io_cancelled # Email with same token will be sent only once

      template_name: io-cancelled

      template_link_url: https://invest.swarm.fund

  kyc_created:
    cursor: 1

    emails:
      subject: "KYC request created"

      request_type: 10 # 10 means that email will be sent only once per each unique token
      request_token_suffix: _kyc_request_created # Email with same token will be sent only once

      template_name: kyc-created

      template_link_url: https://invest.swarm.fund

  kyc_approved:
    cursor: 1

    emails:
      subject: "KYC request approved"

      request_type: 10 # 10 means that email will be sent only once per each unique token
      request_token_suffix: _kyc_request_approved # Email with same token will be sent only once

      template_name: kyc-approved

      template_link_url: https://invest.swarm.fund

  usa_kyc:
    cursor: 1

    emails:
      subject: "Accreditation status verification"
      request_type: 10 # 10 means that email will be sent only once per each unique token
      request_token_suffix: -usa-user-notification # Email with same token will be sent only once
      template_name: us-residents
      template_link_url: https://invest.swarm.fund

  kyc_rejected:
    cursor: 1

    emails:
      subject: "KYC request rejected"

      request_type: 10 # 10 means that email will be sent only once per each unique token
      request_token_suffix: _kyc_request_rejected # Email with same token will be sent only once

      template_name: kyc-rejected

      template_link_url: https://invest.swarm.fund

charger:
  host: localhost
  port: 7331
  pprof: true

forfeit_listener:
  pprof: true
  signer: SBEVH5NEMWSBUCEUUOOIUPVOAI3NMX2TV6X5IDL7TTKKMAEXESX5UVKK
  exchange: SBEVH5NEMWSBUCEUUOOIUPVOAI3NMX2TV6X5IDL7TTKKMAEXESX5UVKK

# deposits
btc_deposit:
  last_processed_block: 1260685
  # Should actually by 5 (6+ confirmations for transactions)
  last_blocks_not_watch: 0
  min_deposit_amount: 500000 # satoshis (0.005 BTC)
  deposit_asset: BTC #TokenD asset code
  offchain_currency: BTC # is used to build network params (version bytes)
  offchain_blockchain: testnet # you usually can only use 'testnet' or 'mainnet'
  external_system: 1
  fixed_deposit_fee: 100000 # satoshis (0.001 BTC)
  disable_verify: false # optional field

  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

btc_deposit_verify:
  # Should actually be 5 (6+ confirmations for transactions)
  last_blocks_not_watch: 0
  min_deposit_amount: 500000 # 0.005 BTC (integer in satoshis)
  deposit_asset: BTC #TokenD asset code
  offchain_currency: BTC # is used to build network params (version bytes)
  offchain_blockchain: testnet # you usually can only use 'testnet' or 'mainnet'
  external_system: 1
  fixed_deposit_fee: 100000 # 0.001 BTC (integer in satoshis)
  blocks_to_search_for_tx: 10 # how many blocks to wait for a TX to appear again after it was first detected in block and disappeared because of fork

  signer: S_SOME_VALID_PRIVATE_KEY

eth_supervisor:
  confirmations: 2
  cursor: 2405320
  base_asset: ETH
  deposit_asset: SUN
  fixed_deposit_fee: 1000000000000000 # 0.001 ETH

  supervisor:
    leadership_key: eth_supervisor
    exchange: G_SOME_VALID_PUBLIC_KEY
    signer: S_SOME_VALID_PRIVATE_KEY

eth_contracts_deploy:
  source: GA5NJM36NXW5UUNTBG47NUGJZ5V7UQJKAEAQH3IHSOXAGGEXSNWLSJAH
  signer: SBQ3YVRINQOJDT6FQD3EFMZ5THZFWVSQ37RZYTFZBF3TEE5GPBS6NNXD
  eth_private_key: "1E2E09CC58A8CA23217C8559AA4BA58CD34379EB9F1716DB422DC0BA6E701F18"
  contract_owner: "0x2B5AD5c4795c026514f8317c7a215E218DcCD6cF" # 0002
  gas_price: 1 # In GWei
  external_types:
    - 9
    - 10
  target_count: 10

# funnels
btc_funnel:
  extended_private_key: xprv...
  keys_to_derive: 10000 # number of key to derive from extended private key

  hot_address: 2N1w4RzejEWkCyumsZY8prvmRxAPFkcwehb # hot wallet
  cold_address: 2N8hwP1WmJrFF5QWABn38y63uYLhnJYJYTF # 2N8hwP1WmJrFF5QWABn38y63uYLhnJYJYTF is testnet faucet

  last_processed_block: 1260685
  min_funnel_amount: 0 # (float in BTC)
  max_hot_stock: 50 # (float in BTC)
  dust_output_limit: 0.005 # (float in BTC)
  max_fee_per_kb: 0.00024 # 24000 satoshi (float in BTC)
  blocks_to_be_included: 4 # from 2 to 25
  offchain_currency: BTC # is used to build network params (version bytes)
  offchain_blockchain: testnet # you usually can only use 'testnet' or 'mainnet'

  min_balance_alarm_threshold: 100 # (float in BTC)
  min_balance_alarm_period: 1h

eth_funnel:
  seed: "some_valid_eth_seed"
  destination: "address_of_eth_hot_wallet"
  confirmations: 1
  threshold: 1
  gas_price: 1000000000
  keys_to_derive: 10

eth_contract_funnel:
  eth_private_key: contract_owner_private_key_hex
  contracts_addresses: [
    "0xcontract_to_funnel_tokend_from_1",
    "0xcontract_to_funnel_tokend_from_2"
  ]
  tokens_receiver_address: eth_address_to_funnel_all_tokens_to
  token_to_funnel_contract_address: address_of_the_erc_20_token's_contract_of_the_token_to_funnel
  funnel_period: 1m # is being parsed to time.Duration (see time.ParseDuration() for possible time.Duration value formats)
  only_view_balances: false # if set to true - will only once prepare and log map of Contracts balances, without any funnelling

#withdrawals
btc_withdraw:
  btc_private_key: hot_wallet_multisig_private_key_1

  hot_wallet_address: 2N1w4RzejEWkCyumsZY8prvmRxAPFkcwehb
  hot_wallet_script_pub_key: a9145f49aacdc4f9a50e71073e8ed3c449a27759517687
  hot_wallet_redeem_script: 522102cff9f17973e0b1d3468ae29532156f43e42d213fa85e1df40154d7f5748fab6221037afc702c97360f5bd534e6e7eeec0963fd71f9e873e31720ba200c131cfc1f1152ae

  offchain_currency: BTC # is used to build network params (version bytes)
  offchain_blockchain: testnet # you usually can only use 'testnet' or 'mainnet'

  min_withdraw_amount: 10000 # 0.0001 BTC (integer in satoshis)

  signer: S_SOME_VALID_PRIVATE_KEY

btc_withdraw_verify:
  host: localhost
  port: 8101

  btc_private_key: cVYHKmhJPJQY8tqW3adCFmePZBd4cdPRanh6yuUEzhzTnvPTsu8t

  hot_wallet_address: 2N1w4RzejEWkCyumsZY8prvmRxAPFkcwehb
  hot_wallet_script_pub_key: a9145f49aacdc4f9a50e71073e8ed3c449a27759517687
  hot_wallet_redeem_script: 522102cff9f17973e0b1d3468ae29532156f43e42d213fa85e1df40154d7f5748fab6221037afc702c97360f5bd534e6e7eeec0963fd71f9e873e31720ba200c131cfc1f1152ae

  min_withdraw_amount: 10000 # 0.0001 BTC (integer in satoshis)

  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

eth_withdraw:
  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

  private_key: first_signer_of_multisig_wallet_private_key
  multisig_wallet_contract_address: 0xcontract_address_hex
  asset: SWM # TokenD asset code
  asset_precision: 18 # 18 for ETH and most ERC20 tokens
  token_address: 0xaddres_of_the_erc_20_token_hex # for not 'ETH' TokenD asset, optional and unused field if 'ETH' in asset
  min_withdraw_amount: 1000000000000000 # 0.001 (in Wei)
  gas_price: 50000000000 # 50 GWei (in Wei)

dash_withdraw:
  offchain_private_key: hot_wallet_multisig_private_key_1

  hot_wallet_address: HotWalletAddress
  hot_wallet_script_pub_key: script_pub_key
  hot_wallet_redeem_script: redeem_script_of_the_hot_wallet_p2sh_address
  fetch_utxo_from: 0 # Block number

  max_fee_per_kb: 0.00000001 # in satoshi (float in Dash)
  dust_output_threshold: 50000 # (int64 in satoshi) # 0.0005 Dash
  blocks_to_be_included: 4 # from 2 to 25

  offchain_currency: DASH # is used to build network params (version bytes)
  offchain_blockchain: testnet # you usually can only use 'testnet' or 'mainnet'

  min_withdraw_amount: 10000 # satoshis 0.0001 BTC

  source: G_SOME_VALID_PULIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

eth_withdraw_verify:
  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

  private_key: second_signer_of_multisig_wallet_private_key
  multisig_wallet_contract_address: 0xcontract_address_hex
  asset: SWM # TokenD asset code
  asset_precision: 18 # 18 for ETH and most ERC20 tokens
  token_address: 0xaddres_of_the_erc_20_token_hex # for not 'ETH' TokenD asset, optional and unused field if 'ETH' in asset
  min_withdraw_amount: 1000000000000000 # 0.001 (in Wei)
  gas_price: 50000000000 # 50 GWei (in Wei)

# prices
price_setter:
  base_asset: "ETH"
  quote_asset: "USD"

  submit_period: 15s
  providers:
    - name: "bitfinex"
      period: 15s
    - name: "coinmarketcap"
      period: 15s
    - name: "bitstamp"
      period: 15s
    - name: gdax
      period: 1s # does not apply any changes as we are using sockets
  providers_to_agree: 3
  max_price_delta_percent: "10"
  verifier_service_name: price_setter_verify

  source: GD7AHJHCDSQI6LVMEJEE2FTNCA2LJQZ4R64GUI3PWANSVEO4GEOWB636
  signer: SCIMXOIWIB32R7JI6ISNYSCO2BFST5E6P3TLBM4TTLHH57IK6SJPGZT2

price_setter_verify:
  host: localhost
  port: 8501

  base_asset: "ETH"
  quote_asset: "USD"

  providers:
    - name: "bitfinex"
      period: 15s
    - name: "coinmarketcap"
      period: 15s
    - name: "bitstamp"
      period: 15s
    - name: gdax
      period: 1s # does not apply any changes as we are using sockets
  providers_to_agree: 3
  max_price_delta_percent: "10"

  signer: S
  verifier_service_name: SOME_VERIFIER_SERVICE_NAME

# airdrops
airdrop_earlybird:
  issuance:
    asset: SWM
    amount: 100000000 # 100 SWM (in stroops)

  registered_before: "2018-02-05T14:00:00" # +14 - the latest existing GMT

  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

  emails:
    subject: "Airdrop"
#    email_subject: "Airdrop delaying"

    request_type: 10 # 10 means that email will be sent only once per each unique token
    request_token_suffix: _airdrop # Email with same token will be sent only once

    template_name: airdrop.html
  #  template_name: airdrop_delaying.html

    template_link_url: https://invest.swarm.fund

  white_list: [
"G_SOME_VALID_ACCOUNT_ADDRESS_1",
"G_SOME_VALID_ACCOUNT_ADDRESS_2"]

airdrop_kyc:
  issuance:
    asset: SWM
    amount: 10000000 # 10 SWM (in stroops)

  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

  emails:
    subject: "KYC Verification Bonus"

    request_type: 10 # 10 means that email will be sent only once per each unique token
    request_token_suffix: _airdrop_kyc # Email with same token will be sent only once

    template_name: airdrop_kyc.html

    template_link_url: https://invest.swarm.fund

  black_list: [
"G_SOME_VALID_ACCOUNT_ADDRESS_1",
"G_SOME_VALID_ACCOUNT_ADDRESS_2"]

airdrop_march_referrals:
  issuance_asset: SWM
  snapshot_time: "2018-04-22T11:30:00"
  approve_wait_finish_time: "2018-04-25T11:30:00"

  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

  emails:
    subject: "March Madness Referral Bonus"

    request_type: 10 # 10 means that email will be sent only once per each unique token
    request_token_suffix: _airdrop_march_referrals # Email with same token will be sent only once

    template_name: airdrop_referral.html

    template_link_url: https://invest.swarm.fund

  black_list: [
"G_SOME_VALID_ACCOUNT_ADDRESS_1",
"G_SOME_VALID_ACCOUNT_ADDRESS_2"]

airdrop_march_20_20:
  issuance_asset: SWM
  snapshot_time: "2018-04-29T14:00:00" # +14 - the latest existing GMT

  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

  emails:
    subject: "March Madness 20/20 Airdrop"

    request_type: 10 # 10 means that email will be sent only once per each unique token
    request_token_suffix: _airdrop_march_20_20 # Email with same token will be sent only once

    template_name: airdop_20-20.html

    template_link_url: https://invest.swarm.fund

  black_list: [
"G_SOME_VALID_ACCOUNT_ADDRESS_1",
"G_SOME_VALID_ACCOUNT_ADDRESS_2"]

airdrop_telegram:
  listener:
    host: localhost
    port: 8007
    timeout: 30s
    check_signature: true # check request signature
  issuance:
    asset: SWM
    amount: 5000000 # 5 SWM (in stroops)

  telegram_secret_key: some_long_hex_string
  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

  black_list: [
"G_SOME_VALID_ACCOUNT_ADDRESS_1",
"G_SOME_VALID_ACCOUNT_ADDRESS_2"]


template_provider:
  host: localhost
  port: 2323
  bucket: "template"
  skip_signature_check: true

wallet_cleaner:
  expire_duration: 128h

# kyc
identity_mind:
  connector:
    url: https://sandbox.identitymind.com/im
    auth_key: ID_MIND_AUTH_KEY # base64(user:password)
  reject_reasons:
    kyc_state_rejected: "KYC service rejected" # Make sure the string is shorter than 256
    fraud_policy_result_denied: "KYC service policy evaluation denied" # Make sure the string is shorter than 256
    invalid_kyc_data: "KYC data is invalid" # Make sure the string is shorter than 256
#    policy_evaluation_rules_fired: "Policy evaluation rules fired" # Make sure the string is shorter than 256
  emails:
    subject: "IDMind pending KYC requests waiting for manual review"
    request_type: 7 # 7 means that email with unique token will be sent only once in 24h
    message: "There are some pending KYC requests waiting for manual review in IDMind. Please, do the manual review."
    send_period: 30m # is being parsed to time.Duration (see time.ParseDuration() for possible time.Duration value formats)
  emails_to_notify: [
"john.doe@example.com",
"jane.doe@example.com"]

  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

invest_ready:
  connector:
    url: https://api.sandbox.investready.com
    client_id: ourClientIDInInvestReady
    client_secret: ourClientSecretInInvestReady
    riderect_uri: https://invest.swarm.fund # The RedirectURI set in the InvestReady cabinet

  redirects:
    host: localhost
    port: 8007
    timeout: 30s
    check_signature: true # check request signature

  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

market_maker:
  check_period: 30s # optional, default 30s
  source: G_SOME_VALID_PUBLIC_KEY
  signer: S_SOME_VALID_PRIVATE_KEY

  asset_pairs:
   - base_asset: BTC
     quote_asset: USD
     base_asset_volume: 10000000 # integer in stroops # set to zero if no sell Offer must be managed (if don't sell the Base asset)
     quote_asset_volume: 100000000000 # integer in stroops # set to zero if no buy Offer must be managed (if don't sell the Quote asset)
     price_margin: "0.05" # 5% # from 0 to 1 as type Amount - string; the sell and buy prices will be price+price_margin and price-price_margin
   - base_asset: ETH
     quote_asset: USD
     base_asset_volume: 500000000 # integer in stroops # set to zero if no sell Offer must be managed (if don't sell the Base asset)
     quote_asset_volume: 75000000000 # integer in stroops # set to zero if no buy Offer must be managed (if don't sell the Quote asset)
     price_margin: "0.007" # 0.7% # from 0 to 1 as type Amount - string; the sell and buy prices will be price+price_margin and price-price_margin
